====================================================================================================
CURSO API REST KTOR - DEPLOY - CONTAINERS DOCKER
====================================================================================================


Configurando Dockerfile para construir a aplicação
----------------------------------------------------------------------------------------------------
- Criar o arquivo 'dockerfile-app' na raiz do projeto 'expensebook'

FROM openjdk:17-jdk-slim
ARG JAR_FILE=target/expensebook-0.0.1-SNAPSHOT-jar-with-dependencies.jar
COPY ${JAR_FILE} app.jar
ENTRYPOINT ["java", "-jar", "/app.jar"]


Preparando script do banco de dados para o Docker Compose
----------------------------------------------------------------------------------------------------
- Criar o diretório 'database' na raiz do projeto 'expensebook'

- Criar o arquivo 'expensebook.sql'

CREATE DATABASE expensebook CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci;

USE expensebook;

CREATE TABLE expenses (
  id INTEGER NOT NULL AUTO_INCREMENT,
  description VARCHAR(100) NOT NULL,
  value DECIMAL(11,2) NOT NULL,
  paid_at DATE NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE utf8mb3_general_ci;


Preparando o arquivo docker-compose.yml
----------------------------------------------------------------------------------------------------
- Criar o arquivo 'docker-compose.yml' na raiz do projeto

version: '3.9'
networks:
  expensebook:
    driver: bridge
    name: expensebook
volumes:
  expensebook:
services:
  db:
    image: mysql:8.0.29
    container_name: expensebook-db
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: root
      MYSQL_TCP_PORT: 3308
    ports:
      - 3308:3308
    expose:
      - 3308
    networks:
      - expensebook
    volumes:
      - ./database/expensebook.sql:/docker-entrypoint-initdb.d/0_create.sql
  app:
    depends_on:
      - db
    build:
      context: .
      dockerfile: dockerfile-app
    image: erosvitor/expensebook
    container_name: expensebook-app
    restart: always
    # Estas propriedades sobrepoem as propriedades no 'application.yml'
    environment:
      TZ: America/Sao_Paulo
      DB_URL: jdbc:mysql://db:3308/expensebook?useTimezone=true&serverTimezone=UTC
      DB_USERNAME: root
      DB_PASSWORD: root
    ports:
      - 8080:8080
    networks:
      - expensebook


Criandos os containers
----------------------------------------------------------------------------------------------------
- Criar os containers com o comando abaixo

  $ docker compose up


Monitorando os containers
----------------------------------------------------------------------------------------------------
- Verificado se os containers foram criados

  $ docker container ls

- Verificando os logs do container do banco de dados

  $ docker logs expensebook-db

- Verificando os logs do container da aplicação

  $ docker logs expensebook-app

- Obtendo o endereço IP do container da aplicação

  $ docker inspect expensebook-app | grep IPAddress

- Acessando a documentação da API

  http://<IP-CONTAINER-APLICACAO>:8080/swagger-ui

- Acessando o container do banco de dados

  $ docker exec -it expensebook-db /bin/bash

- Obtendo estatísticas dos containers

  $ docker stats


